apply plugin: 'idea'

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library-distribution'
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'
        // spring
        // https://mvnrepository.com/artifact/org.springframework/spring-context
        compile group: 'org.springframework', name: 'spring-context', version: '4.3.7.RELEASE'
        // logger
        // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
        // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.2'
        //
    }
}

// для Spring Boot

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
    }
}

// modules

project(':common') {
    dependencies {
        // json
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.7'
    }
}

project(':server-core') {
    apply plugin: 'org.springframework.boot'
    dependencies {
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        compile("org.springframework.boot:spring-boot-devtools")
        compile group: 'commons-io', name: 'commons-io', version: '2.5'
        compile project(':common')
    }
}

project(':tracker-core') {
    apply plugin: 'org.springframework.boot'
    dependencies {
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        compile("org.springframework.boot:spring-boot-devtools")
        compile group: 'commons-io', name: 'commons-io', version: '2.5'
        // parsing GPX file for GPS Service
        // https://mvnrepository.com/artifact/io.jenetics/jpx
        compile group: 'io.jenetics', name: 'jpx', version: '1.2.3'
        compile project(':common')
    }
}

project(':tracker-ui') {
    dependencies {
        compile project(':common')
    }
}

project(':server-ui') {
    apply plugin: 'org.springframework.boot'

    dependencies {
        compile project(':common')
        //
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        // tag::security[]
        compile("org.springframework.boot:spring-boot-starter-security")
        // end::security[]
        // junit from common
        testCompile("org.springframework.boot:spring-boot-starter-test")
        testCompile("org.springframework.security:spring-security-test")
    }

    jar {
        // ?
        baseName = 'security-boot'
        version =  '0.1.0'
    }

}



